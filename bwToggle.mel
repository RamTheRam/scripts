//----------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------
//------------------------------                Tool for Toggling           --------------------------------
//----------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------


/*
                USE THIS TOOL FOR SIMPLE TOGGLING OF OBJECT PARAMATERS WHILE MODELING. THE TOOL IS AIMED
                AT BRINGING COMMON EVERYDAY TOOLS TO THE FOREGROUND AND OUTSIDE OF THE NUMEROUS MENUS THEY LIVE
                BEHIND. ALLOWS YOU TO TOGGLE BORDER EDGES, BACKFACE CULLING, NORMALS, WIREFRAME/SHADED, BOUNDING BOX,
                VERTICES,XRAY ON SELECTION AND EVEN MOVE PIVOT TO THE BASE OF AN OBJECT.
                TO USE - Source the script then run bwToggle from the command line : bwToggle
                
                Created 06/2010 updated 11/2013 by Bryan Woodard
                Use at your own risk.
*/



global proc bwToggle()
{
if(`window -ex makeShaderWindow`) 
        deleteUI makeShaderWindow;
        window  -t "Toggle Object 0.2" -bgc .45 .45 .45 -rtf 0 -s 1
         makeShaderWindow;
     
        //Create a formLayout
        formLayout shaderSetupForm; 
//-------------------Start of form-----------------------------
        text -l "Toggle Normal" normText;
        text -l "Reverse Normal" revText;
        text -l	"Toggle	Wire/Shaded" wireText;
        text -l	"Toggle	Border Edge" borderText;
        text -l "Toggle Backface Culling" cullingText;
        text -l	"Toggle	Template" templateText;
        text -l	"Toggle	Bounding Box" boundBoxText;
        text -l	"Toggle	Vertices" dispVertsText;
        text -l "Move Pivot to Object Base" movePivText;       
        text -l "Toggle X-Ray" togXRayText; 
        
        string $normalButton = `button -label "Off" `; 
        button -edit -w 120 -c ("toggleNormal " + $normalButton) $normalButton;             
        string $revButton = `button -label "Off"`;
        button -edit -w 120 -c ("revNormal " + $revButton) $revButton;              
        string $wireButton = `button -label "Off" `; 
        button -edit -w 120 -c ("toggleWire " + $wireButton) $wireButton;        
        string $borderButton = `button -label "Off" `; 
        button -edit -w 120 -c ("toggleBorder " + $borderButton) $borderButton;        
        string $cullingButton = `button -label "Off" `; 
        button -edit -w 120 -c ("cullingBorder " + $cullingButton) $cullingButton;        
        string $templateButton = `button -label "Off" `; 
        button -edit -w 120 -c ("templateBorder " + $templateButton) $templateButton;        
        string $boundBoxButton = `button -label "Off" `; 
        button -edit -w 120 -c ("boundBox " + $boundBoxButton) $boundBoxButton;        
        string $dispVertsButton = `button -label "Off" `; 
        button -edit -w 120 -c ("dispVerts " + $dispVertsButton) $dispVertsButton;        
        string $movePivotButton = `button -label "Move It" `; 
        button -edit -w 120 -c ("movePivot " + $movePivotButton) $movePivotButton;
        string $xRayButton = `button -label "Off" `; 
        button -edit -w 120 -c ("toggleXRay " + $xRayButton) $xRayButton;


    formLayout -e -w 300 -h 160
        //--------------------------------------------------
        -af normText left 11
        -af normText top 5
        -af $normalButton top 5 
        -af $normalButton right 10
        //--------------------------------------------------
        -af revText left 11
        -af revText top 30
        -ac $revButton top 3 $normalButton       
        -af $revButton right 10
        //--------------------------------------------------
        -af wireText left 3
        -ac wireText top 3 $revButton
        -af $wireButton top 55
        -af $wireButton right 10
        //--------------------------------------------------
        -af borderText left 5        
        -ac borderText top 3 $wireButton
        -af $borderButton top 80 
        -af $borderButton right 10
        //--------------------------------------------------       
        -af cullingText left 11        
        -ac cullingText top 3 $borderButton 
        -af $cullingButton top 105 
        -af $cullingButton right 10
        //-----------------------------------------------
        -af templateText left 5       
        -ac templateText top 3 $cullingButton  
        -af $templateButton top 130 
        -af $templateButton right 10
        //----------------------------------------------
        -af boundBoxText left 5        
        -ac boundBoxText top 3 $templateButton 
        -af $boundBoxButton top 155 
        -af $boundBoxButton right 10
        //-----------------------------------------------
        -af dispVertsText left 5        
        -ac dispVertsText top 3 $boundBoxButton
        -af $dispVertsButton top 180
        -af $dispVertsButton right 10
        //-----------------------------------------------
        -af movePivText left 11 
        -ac movePivText top 3 $dispVertsButton 
        -af $movePivotButton top 205 
        -af $movePivotButton right 10
        //-----------------------------------------------
        -af togXRayText left 11 
        -ac togXRayText top 3 $movePivotButton 
        -af $xRayButton top 230 
        -af $xRayButton right 10
        //-----------------------------------------------
   shaderSetupForm;	


//--------------------        End of form     ------------------------------


        setParent ..;
    setParent ..;
showWindow;

}
//---------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------
//---------------------------     Wireframe/shaded Toggle     ---------------------------
//---------------------------------------------------------------------------------------


global proc toggleWire(string $wireButton)
{ 
string $sel[] ;
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";
string $labelB = "Off";
string $wireButton;
$currentLabel = `button -query -label $wireButton`;

    if ($currentLabel != $labelA){
        button -edit -label $labelA $wireButton;
            for ($i=0;$i<size($sel);$i++)
                {
                    setAttr ($sel[$i] + ".overrideEnabled") 1;
                    setAttr ($sel[$i] + ".overrideShading") 0;
                }

           }else{

        button -edit -label $labelB $wireButton;
            for($i=0;$i<size($sel);$i++)

                {
                
                setAttr ($sel[$i] +".overrideShading") 1;
                setAttr ($sel[$i] + ".overrideEnabled") 0;
                
                }

}
}

//--------------------------------------------------------------------------------------------------
//----------------------------         Display/Hide Normals         --------------------------------
//--------------------------------------------------------------------------------------------------

global proc toggleNormal(string $normalButton)
{
string $sel[] ;
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";
string $labelB = "Off";
string $normalButton;
$currentLabel = `button -query -label $normalButton`;
    if ($currentLabel != $labelA){
        
        button -edit -label $labelA $normalButton;
            for($i=0;$i<size($sel);$i++)
                {
                
                setAttr ($sel[$i] + ".displayNormal") 1; //command to toggle on
                }
           }else {

        button -edit -label $labelB $normalButton;
             for($i=0;$i<size($sel);$i++)

                {
                
                setAttr ($sel[$i] + ".displayNormal") 0;// conimand to toggle off
                }

}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-------------------------------          Reverse Normals          --------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------

global proc revNormal (string $revButton)
{
string $sel [ ];
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";
string $labelB = "Off";
string $normalButton;
$currentLabel = `button -query -label $revButton`;
        for($i=0;$i<size($sel) ;$i++)
        {

            polyNormal -normalMode 0 -userNormalMode 0 -ch 1 $sel[$i];// command to reverse objects normals
        }
}
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-----------------------------          Display/Hide Borders          -----------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc toggleBorder(string $borderButton)
{
string $sel[];
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";   
string $labelB = "Off"; string $borderButton;
$currentLabel = `button -query -label $borderButton`;
    if ($currentLabel != $labelA){
        button -edit -label $labelA $borderButton;

            for ($i=0;$i<size($sel);$i++)

            {

                setAttr ($sel[$i] + ".displayBorders") 1;
                setAttr ($sel[$i] + ".borderWidth") 5;
            }

            }else{

        button -edit -label $labelB $borderButton;
            for($i=0;$i<size($sel);$i++)
            {

                setAttr ($sel[$i] + ".borderWidth") 2;
                setAttr ($sel[$i] + ".displayBorders") 0;
            }

}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-----------------------------          Backface Culling Toggle          --------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc cullingBorder (string $cullingButton)
{
string $sel [ ];
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";
string $labelB = "Off";
string $cullingButton;
$currentLabel = `button -query -label $cullingButton`;
    if ($currentLabel != $labelA){

    button -edit -label $labelA $cullingButton;
        for($i=0;$i<size($sel) ;$i++)

        {

        setAttr ($sel[$i] + ".backfaceCulling") 3;
        }

    }else{

    button -edit -label $labelB $cullingButton;
        for($i=0;$i<size($sel);$i++)
        { 
        
        setAttr ($sel[$i] + ".backfaceCulling") 0; 
        }
}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//-----------------------------          Bounding Box Toggle         -------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc boundBox (string $cullingButton)

{

string $sel [ ]; string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel; string $labelA = "On";
string $labelB = "Off";
string $cullingButton;
$currentLabel = `button -query -label $cullingButton`;
    if ($currentLabel != $labelA){
        button -edit -label $labelA $cullingButton;
            for($i=0;$i<size($sel);$i++)
            {
   
            setAttr ($sel[$i] + ".overrideEnabled") 1;
            setAttr ($sel[$i] + ".overrideLevelOfDetail") 1;

            }

    }else{
        button -edit -label $labelB $cullingButton;
            for($i=0;$i<size($sel);$i++)
            {  
                      
            setAttr ($sel[$i] + ".overrideLevelOfDetail") 0;
            setAttr ($sel[$i] + ".overrideEnabled") 0;            
            }

}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//----------------------------          Display Vertices Toggle         ----------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc dispVerts (string $cullingButton) {
string $sel [ ]; string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel; string $labelA = "On";
string $labelB = "Off";
string $cullingButton;
$currentLabel = `button -query -label $cullingButton`;
    if ($currentLabel != $labelA){
        button -edit -label $labelA $cullingButton;
            for($i=0;$i<size($sel);$i++)
    
            {
            
            setAttr ($sel[$i] + ".displayVertices") 1;            
            }
    
    }else{
    
        button -edit -label $labelB $cullingButton;
            for($i=0;$i<size($sel);$i++)
    
            {

            setAttr ($sel[$i] + ".displayVertices") 0;
            }

}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//----------------------------              Template Toggle             ----------------------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc templateBorder (string $cullingButton)
{

string $sel[];
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";
string $labelB = "Off";
string $cullingButton;
$currentLabel = `button -query -label $cullingButton`;
    if ($currentLabel != $labelA){
        button -edit -label $labelA $cullingButton;
            for($i=0;$i<size($sel);$i++)

            {
            
            setAttr ($sel[$i]+".template") 1;            
            }

    }else{

        button -edit -label $labelB $cullingButton;
            for($i=0;$i<size($sel);$i++)       
            
            
            {
            
            setAttr ($sel[$i]+".template") 0; 
            }
}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//----------------------------                Move Pivot to Objects Base               -------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc movePivot(string $cullingButton)
{
string $nodeType;
string $objSel[] = `ls -sl`;
string $currentLabel;
string $labelA = "Move It";
string $labelB = "Do It Again";
string $cullingButton;
$currentLabel = `button -query -label $cullingButton`;
    if ($currentLabel != $labelA){
        button -edit -label $labelA $cullingButton;
            for($i=0;$i<size($objSel);$i++)
            {

            select $objSel[$i];
            float $BBox[] = `xform -q -ws -bb`;
            float $xAxis = ($BBox[0]	+	$BBox[3])/2;
            float $zAxis = ($BBox[2]	+	$BBox[5])/2;
            float $CPivot[] = `xform -cp`;
            float $getPivotInfo[] = `xform -q -piv`;
            xform -ws -piv $xAxis $BBox[1] $zAxis;
            }

    }else{

        button -edit -label $labelB $cullingButton;
            for($i=0;$i<size($objSel);$i++)
            {
            
            select $objSel[$i]; float $BBox[] = `xform -q -ws -bb`;
            float $xAxis = ($BBox[0] + $BBox[3])/2;
            float $zAxis = ($BBox[2] + $BBox[5])/2;
            float $CPivot[] = `xform -cp`;
            float $getPivotInfo[] = `xform -q -piv`;
            xform -ws -piv $xAxis $BBox[1] $zAxis;
            }
}
}

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//----------------------------                Toggle xray on selected               ----------------------------
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
global proc toggleXRay(string $xRayButton)
{
int $value;
int $temp[];
string $buffer[];
string $firstInstance;
string $select_all[] = `ls -sl`;
string $comp_selection[] = `listRelatives -typ surfaceShape -parent $select_all`;
string $obj_selection[] = `ls -sl -dag -ap -typ surfaceShape`;    
string $sel[];
string $nodeType;
$sel= `ls -sl -dag -lf`;
string $currentLabel;
string $labelA = "On";
string $labelB = "Off";
string $xRayButton;
$currentLabel = `button -query -label $xRayButton`;
    if ($currentLabel != $labelA){
        button -edit -label $labelA $xRayButton;
           for ($obj in $obj_selection){
	            $temp = `displaySurface -q -x $obj`;	
	            $value = $temp[0];
	        if ($value == 0)
            	{
            		displaySurface -x 1 $obj;
            	}}

    }else{

        button -edit -label $labelB $xRayButton;
            for ($obj in $obj_selection){
	            $temp = `displaySurface -q -x $obj`;	
	            $value = $temp[0];
	        if ($value == 1)
            	{
            		displaySurface -x 0 $obj;
            	}}
}
}


bwToggle;